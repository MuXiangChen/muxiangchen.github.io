import{_ as s,c as a,e as t,o as e}from"./app-gihhjKhR.js";const p={};function l(i,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h2 id="定时器的常见方法" tabindex="-1"><a class="header-anchor" href="#定时器的常见方法"><span>定时器的常见方法</span></a></h2><ul><li><p>setInterval()：循环调用。将一段代码，<strong>每隔一段时间</strong>执行一次。（循环执行）</p></li><li><p>setTimeout()：延时调用。将一段代码，等待一段时间之后<strong>再执行</strong>。（只执行一次）</p></li></ul><p>备注：在实际开发中，二者是可以根据需要，互相替代的。</p><h2 id="setinterval-的使用" tabindex="-1"><a class="header-anchor" href="#setinterval-的使用"><span>setInterval() 的使用</span></a></h2><p><code>setInterval()</code>：循环调用。将一段代码，<strong>每隔一段时间</strong>执行一次。（循环执行）</p><p><strong>参数</strong>：</p><ul><li><p>参数1：回调函数，该函数会每隔一段时间被调用一次。</p></li><li><p>参数2：每次调用的间隔时间，单位是毫秒。</p></li></ul><p><strong>返回值</strong>：返回一个Number类型的数据。这个数字用来作为定时器的<strong>唯一标识</strong>，方便用来清除定时器。</p><h3 id="定义定时器" tabindex="-1"><a class="header-anchor" href="#定义定时器"><span>定义定时器</span></a></h3><p><strong>方式一</strong>：匿名函数</p><p>每间隔一秒，将 数字 加1：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">       num <span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方式二：</strong></p><p>每间隔一秒，将 数字 加1：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token function">setInterval</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">       num <span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="清除定时器" tabindex="-1"><a class="header-anchor" href="#清除定时器"><span>清除定时器</span></a></h3><p>定时器的返回值是作为这个定时器的<strong>唯一标识</strong>，可以用来清除定时器。具体方法是：假设定时器setInterval()的返回值是<code>参数1</code>，那么<code>clearInterval(参数1)</code>就可以清除定时器。</p><p>setTimeout()的道理是一样的。</p><p>代码举例：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//每间隔一秒，打印一次num的值</span></span>
<span class="line">        num <span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//打印四次之后，就清除定时器</span></span>
<span class="line">            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="settimeout-的使用" tabindex="-1"><a class="header-anchor" href="#settimeout-的使用"><span>setTimeout() 的使用</span></a></h2><p><code>setTimeout()</code>：延时调用。将一段代码，等待一段时间之后<strong>再执行</strong>。（只执行一次）</p><p><strong>参数</strong>：</p><ul><li><p>参数1：回调函数，该函数会每隔一段时间被调用一次。</p></li><li><p>参数2：每次调用的间隔时间，单位是毫秒。</p></li></ul><p><strong>返回值</strong>：返回一个Number类型的数据。这个数字用来作为定时器的<strong>唯一标识</strong>，方便用来清除定时器。</p><h3 id="定义和清除定时器" tabindex="-1"><a class="header-anchor" href="#定义和清除定时器"><span>定义和清除定时器</span></a></h3><p>代码举例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3秒之后，再执行这段代码。</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码举例：（箭头函数写法）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3秒之后，再执行这段代码。</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="settimeout-举例-5秒后关闭网页两侧的广告栏" tabindex="-1"><a class="header-anchor" href="#settimeout-举例-5秒后关闭网页两侧的广告栏"><span>setTimeout() 举例：5秒后关闭网页两侧的广告栏</span></a></h3><p>假设网页两侧的广告栏为两个img标签，它们的样式为：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">    ...</span>
<span class="line">    ...</span>
<span class="line"></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5秒后关闭广告栏的js代码为：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">        window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//获取相关元素</span></span>
<span class="line">            <span class="token keyword">var</span> imgArr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">//设置定时器：5秒后关闭两侧的广告栏</span></span>
<span class="line">            <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                imgArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">;</span></span>
<span class="line">                imgArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35)]))}const o=s(p,[["render",l],["__file","46-定时器.html.vue"]]),u=JSON.parse('{"path":"/Frontend/04-JavaScript%E5%9F%BA%E7%A1%80/46-%E5%AE%9A%E6%97%B6%E5%99%A8.html","title":"46-定时器","lang":"en-US","frontmatter":{"title":"46-定时器"},"headers":[{"level":2,"title":"定时器的常见方法","slug":"定时器的常见方法","link":"#定时器的常见方法","children":[]},{"level":2,"title":"setInterval() 的使用","slug":"setinterval-的使用","link":"#setinterval-的使用","children":[{"level":3,"title":"定义定时器","slug":"定义定时器","link":"#定义定时器","children":[]},{"level":3,"title":"清除定时器","slug":"清除定时器","link":"#清除定时器","children":[]}]},{"level":2,"title":"setTimeout() 的使用","slug":"settimeout-的使用","link":"#settimeout-的使用","children":[{"level":3,"title":"定义和清除定时器","slug":"定义和清除定时器","link":"#定义和清除定时器","children":[]},{"level":3,"title":"setTimeout() 举例：5秒后关闭网页两侧的广告栏","slug":"settimeout-举例-5秒后关闭网页两侧的广告栏","link":"#settimeout-举例-5秒后关闭网页两侧的广告栏","children":[]}]}],"git":{"updatedTime":1735788687000,"contributors":[{"name":"Jasmine Mo","username":"Jasmine Mo","email":"loxluthor@gmail.com","commits":1,"url":"https://github.com/Jasmine Mo"}]},"filePathRelative":"Frontend/04-JavaScript基础/46-定时器.md"}');export{o as comp,u as data};
