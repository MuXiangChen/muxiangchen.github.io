import{_ as s,c as a,e as t,o as p}from"./app-gihhjKhR.js";const e={};function l(o,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h2 id="常见概念" tabindex="-1"><a class="header-anchor" href="#常见概念"><span>常见概念</span></a></h2><h3 id="javascript的组成" tabindex="-1"><a class="header-anchor" href="#javascript的组成"><span>JavaScript的组成</span></a></h3><p>JavaScript基础分为三个部分：</p><ul><li><p>ECMAScript：JavaScript的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等。</p></li><li><p><strong>DOM</strong>：文档对象模型（Document object Model），操作<strong>网页上的元素</strong>的API。比如让盒子移动、变色、轮播图等。</p></li><li><p><strong>BOM</strong>：浏览器对象模型（Browser Object Model），操作<strong>浏览器部分功能</strong>的API。比如让浏览器自动滚动。</p></li></ul><h3 id="节点" tabindex="-1"><a class="header-anchor" href="#节点"><span>节点</span></a></h3><p><strong>节点</strong>（Node）：构成 HTML 网页的最基本单元。网页中的每一个部分都可以称为是一个节点，比如：html标签、属性、文本、注释、整个文档等都是一个节点。</p><p>虽然都是节点，但是实际上他们的具体类型是不同的。常见节点分为四类：</p><ul><li><p>文档节点（文档）：整个 HTML 文档。整个 HTML 文档就是一个文档节点。</p></li><li><p>元素节点（标签）：HTML标签。</p></li><li><p>属性节点（属性）：元素的属性。</p></li><li><p>文本节点（文本）：HTML标签中的文本内容（包括标签之间的空格、换行）。</p></li></ul><p>节点的类型不同，属性和方法也都不尽相同。所有的节点都是Object。</p><h3 id="什么是dom" tabindex="-1"><a class="header-anchor" href="#什么是dom"><span>什么是DOM</span></a></h3><p><strong>DOM</strong>：Document Object Model，文档对象模型。DOM 为文档提供了结构化表示，并定义了如何通过脚本来访问文档结构。目的其实就是为了能让js操作html元素而制定的一个规范。</p><p>DOM就是由节点组成的。</p><p><strong>解析过程</strong>： HTML加载完毕，渲染引擎会在内存中把HTML文档，生成一个DOM树，getElementById是获取内中DOM上的元素节点。然后操作的时候修改的是该元素的<strong>属性</strong>。</p><p><strong>DOM树</strong>：（一切都是节点）</p><p>DOM的数据结构如下：</p><p><img src="http://img.smyhvae.com/20180126_2105.png" alt=""></p><p>上图可知，<strong>在HTML当中，一切都是节点</strong>（非常重要）。节点的分类，在上一段中，已经讲了。</p><p>整个html文档就是一个文档节点。所有的节点都是Object。</p><h3 id="dom可以做什么" tabindex="-1"><a class="header-anchor" href="#dom可以做什么"><span>DOM可以做什么</span></a></h3><ul><li><p>找对象（元素节点）</p></li><li><p>设置元素的属性值</p></li><li><p>设置元素的样式</p></li><li><p>动态创建和删除元素</p></li><li><p>事件的触发响应：事件源、事件、事件的驱动程序</p></li></ul><h2 id="元素节点的获取" tabindex="-1"><a class="header-anchor" href="#元素节点的获取"><span>元素节点的获取</span></a></h2><p>DOM节点的获取方式其实就是<strong>获取事件源的方式</strong>。关于事件，上一篇文章中已经讲到了。</p><p>想要操作元素节点，必须首先要找到该节点。有三种方式可以获取DOM节点：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> div1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//方式一：通过 id 获取 一个 元素节点（为什么是一个呢？因为 id 是唯一的）</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> arr1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//方式二：通过 标签名 获取 元素节点数组，所以有s</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> arr2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;hehe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//方式三：通过 类名 获取 元素节点数组，所以有s</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>既然方式二、方式三获取的是标签数组，那么习惯性是<strong>先遍历之后再使用</strong>。</p><p>特殊情况：数组中的值只有1个。即便如此，这一个值也是包在数组里的。这个值的获取方式如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//取数组中的第一个元素</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;hehe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//取数组中的第一个元素</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dom访问关系的获取" tabindex="-1"><a class="header-anchor" href="#dom访问关系的获取"><span>DOM访问关系的获取</span></a></h2><p>DOM的节点并不是孤立的，因此可以通过DOM节点之间的相对关系对它们进行访问。如下：</p><p><img src="http://img.smyhvae.com/20180126_2140.png" alt=""></p><p>节点的访问关系，是以<strong>属性</strong>的方式存在的。</p><p>JS中的<strong>父子兄</strong>访问关系：</p><p><img src="http://img.smyhvae.com/20180126_2145.png" alt=""></p><p>这里我们要重点知道<strong>parentNode</strong>和<strong>children</strong>这两个属性的用法。下面分别介绍。</p><h3 id="获取父节点" tabindex="-1"><a class="header-anchor" href="#获取父节点"><span>获取父节点</span></a></h3><p>调用者就是节点。一个节点只有一个父节点，调用方式就是</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	节点<span class="token punctuation">.</span>parentNode</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="获取兄弟节点" tabindex="-1"><a class="header-anchor" href="#获取兄弟节点"><span>获取兄弟节点</span></a></h3><p><strong>1、下一个节点 | 下一个元素节点</strong>：</p><blockquote><p>Sibling的中文是<strong>兄弟</strong>。</p></blockquote><p>（1）nextSibling：</p><ul><li><p>火狐、谷歌、IE9+版本：都指的是下一个节点（包括标签、空文档和换行节点）。</p></li><li><p>IE678版本：指下一个元素节点（标签）。</p></li></ul><p>（2）nextElementSibling：</p><ul><li>火狐、谷歌、IE9+版本：都指的是下一个元素节点（标签）。</li></ul><p><strong>总结</strong>：为了获取下一个<strong>元素节点</strong>，我们可以这样做：在IE678中用nextSibling，在火狐谷歌IE9+以后用nextElementSibling，于是，综合这两个属性，可以这样写：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	下一个兄弟节点 <span class="token operator">=</span> 节点<span class="token punctuation">.</span>nextElementSibling <span class="token operator">||</span> 节点<span class="token punctuation">.</span>nextSibling</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>2、前一个节点 | 前一个元素节点</strong>：</p><blockquote><p>previous的中文是：前一个。</p></blockquote><p>（1）previousSibling：</p><ul><li><p>火狐、谷歌、IE9+版本：都指的是前一个节点（包括标签、空文档和换行节点）。</p></li><li><p>IE678版本：指前一个元素节点（标签）。</p></li></ul><p>（2）previousElementSibling：</p><ul><li>火狐、谷歌、IE9+版本：都指的是前一个元素节点（标签）。</li></ul><p><strong>总结</strong>：为了获取前一个<strong>元素节点</strong>，我们可以这样做：在IE678中用previousSibling，在火狐谷歌IE9+以后用previousElementSibling，于是，综合这两个属性，可以这样写：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	前一个兄弟节点 <span class="token operator">=</span> 节点<span class="token punctuation">.</span>previousElementSibling <span class="token operator">||</span> 节点<span class="token punctuation">.</span>previousSibling</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>3、补充</strong>：获得任意一个兄弟节点：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	节点自己<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>children<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//随意得到兄弟节点</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="获取单个的子节点" tabindex="-1"><a class="header-anchor" href="#获取单个的子节点"><span>获取单个的子节点</span></a></h3><p><strong>1、第一个子节点 | 第一个子元素节点</strong>：</p><p>（1）firstChild：</p><ul><li><p>火狐、谷歌、IE9+版本：都指的是第一个子节点（包括标签、空文档和换行节点）。</p></li><li><p>IE678版本：指第一个子元素节点（标签）。</p></li></ul><p>（2）firstElementChild：</p><ul><li>火狐、谷歌、IE9+版本：都指的是第一个子元素节点（标签）。</li></ul><p><strong>总结</strong>：为了获取第一个<strong>子元素节点</strong>，我们可以这样做：在IE678中用firstChild，在火狐谷歌IE9+以后用firstElementChild，于是，综合这两个属性，可以这样写：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	第一个子元素节点 <span class="token operator">=</span> 节点<span class="token punctuation">.</span>firstElementChild <span class="token operator">||</span> 节点<span class="token punctuation">.</span>firstChild</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>2、最后一个子节点 | 最后一个子元素节点</strong>：</p><p>（1）lastChild：</p><ul><li><p>火狐、谷歌、IE9+版本：都指的是最后一个子节点（包括标签、空文档和换行节点）。</p></li><li><p>IE678版本：指最后一个子元素节点（标签）。</p></li></ul><p>（2）lastElementChild：</p><ul><li>火狐、谷歌、IE9+版本：都指的是最后一个子元素节点（标签）。</li></ul><p><strong>总结</strong>：为了获取最后一个<strong>子元素节点</strong>，我们可以这样做：在IE678中用lastChild，在火狐谷歌IE9+以后用lastElementChild，于是，综合这两个属性，可以这样写：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	最后一个子元素节点 <span class="token operator">=</span> 节点<span class="token punctuation">.</span>lastElementChild <span class="token operator">||</span> 节点<span class="token punctuation">.</span>lastChild</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="获取所有的子节点" tabindex="-1"><a class="header-anchor" href="#获取所有的子节点"><span>获取所有的子节点</span></a></h3><p>（1）<strong>childNodes</strong>：标准属性。返回的是指定元素的<strong>子节点</strong>的集合（包括元素节点、所有属性、文本节点）。是W3C的亲儿子。</p><ul><li>火狐 谷歌等高本版会把换行也看做是子节点。</li></ul><p>用法：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	子节点数组 <span class="token operator">=</span> 父节点<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span>   <span class="token comment">//获取所有节点。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>（2）<strong>children</strong>：非标准属性。返回的是指定元素的<strong>子元素节点</strong>的集合。【重要】</p><ul><li>它只返回HTML节点，甚至不返回文本节点。</li><li>在IE6/7/8中包含注释节点（在IE678中，注释节点不要写在里面）。</li></ul><p>虽然不是标准的DOM属性，但它和innerHTML方法一样，得到了几乎所有浏览器的支持。</p><p>用法：（<strong>用的最多</strong>）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	子节点数组 <span class="token operator">=</span> 父节点<span class="token punctuation">.</span>children<span class="token punctuation">;</span>   <span class="token comment">//获取所有节点。用的最多。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="dom节点的操作-重要" tabindex="-1"><a class="header-anchor" href="#dom节点的操作-重要"><span>DOM节点的操作（重要）</span></a></h2><p>上一段的内容：节点的<strong>访问关系</strong>都是<strong>属性</strong>。</p><p>本段的内容：节点的<strong>操作</strong>都是<strong>函数</strong>（方法）。</p><h3 id="创建节点" tabindex="-1"><a class="header-anchor" href="#创建节点"><span>创建节点</span></a></h3><p>格式如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	<span class="token function">新的标签</span><span class="token punctuation">(</span>元素节点<span class="token punctuation">)</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;标签名&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如，如果我们想创建一个li标签，或者是创建一个不存在的adbc标签，可以这样做：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token keyword">var</span> a1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//创建一个li标签</span></span>
<span class="line">    <span class="token keyword">var</span> a2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;adbc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//创建一个不存在的标签</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果：</p><p><img src="http://img.smyhvae.com/20180127_1135.png" alt=""></p><h3 id="插入节点" tabindex="-1"><a class="header-anchor" href="#插入节点"><span>插入节点</span></a></h3><p>插入节点有两种方式，它们的含义是不同的。</p><p>方式1：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	父节点<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>新的子节点<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：父节点的最后插入一个新的子节点。</p><p>方式2：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	父节点<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>新的子节点<span class="token punctuation">,</span>作为参考的子节点<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：</p><ul><li>在参考节点前插入一个新的节点。</li><li>如果参考节点为null，那么他将在父节点里面的最后插入一个子节点。</li></ul><p><img src="http://img.smyhvae.com/20180127_1257.png" alt=""></p><p>我们可以看到，li标签确实被插入到了box1标签的里面，和box2并列了。</p><p>方式2的举例：</p><p><img src="http://img.smyhvae.com/20180127_1302.png" alt=""></p><p>我们可以看到，b1标签被插入到了box1标签的里面，和a1标签并列，在a1标签的前面。</p><p><strong>特别强调：</strong></p><p>关于方式1的appendChild方法，这里要强调一下。比如，现在有下面这样一个div结构：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box11<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box12<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>生命壹号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box21<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box22<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>永不止步<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上方结构中，子盒子box12是在父亲box11里的，子盒子box22是在父亲box21里面的。现在，如果我调用方法<code>box11.appendChild(box22)</code>，<strong>最后产生的结果是：box22会跑到box11中</strong>（也就是说，box22不在box21里面了）。这是一个很神奇的事情：</p><p><img src="http://img.smyhvae.com/20180129_2125.png" alt=""></p><h3 id="删除节点" tabindex="-1"><a class="header-anchor" href="#删除节点"><span>删除节点</span></a></h3><p>格式如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	父节点<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>子节点<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：<strong>用父节点删除子节点</strong>。必须要指定是删除哪个子节点。</p><p>如果我想删除自己这个节点，可以这么做：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	node1<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="复制节点-克隆节点" tabindex="-1"><a class="header-anchor" href="#复制节点-克隆节点"><span>复制节点（克隆节点）</span></a></h3><p>格式如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	要复制的节点<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//括号里不带参数和带参数false，效果是一样的。</span></span>
<span class="line"></span>
<span class="line">	要复制的节点<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>括号里带不带参数，效果是不同的。解释如下：</p><ul><li><p>不带参数/带参数false：只复制节点本身，不复制子节点。</p></li><li><p>带参数true：既复制节点本身，也复制其所有的子节点。</p></li></ul><h2 id="设置节点的属性" tabindex="-1"><a class="header-anchor" href="#设置节点的属性"><span>设置节点的属性</span></a></h2><p>我们可以获取节点的属性值、设置节点的属性值、删除节点的属性。</p><p>我们就统一拿下面这个标签来举例：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/1.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>美女图片<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>地铁一瞥<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下面分别介绍。</p><h3 id="_1、获取节点的属性值" tabindex="-1"><a class="header-anchor" href="#_1、获取节点的属性值"><span>1、获取节点的属性值</span></a></h3><p><strong>方式1</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	元素节点<span class="token punctuation">.</span>属性名<span class="token punctuation">;</span></span>
<span class="line">	元素节点<span class="token punctuation">[</span>属性名<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：（获取节点的属性值）</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/1.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>美女图片<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>地铁一瞥<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token keyword">var</span> myNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//注意，是className，不是class</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">[</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">[</span><span class="token string">&quot;className&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//注意，是className，不是class</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上方代码中的img标签，有各种属性，我们可以逐一获取，打印结果如下：</p><p><img src="http://img.smyhvae.com/20180127_1340.png" alt=""></p><p><strong>方式2</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	元素节点<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;属性名称&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>举例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//注意是class，不是className</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNode<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果：</p><p><img src="http://img.smyhvae.com/20180127_1345.png" alt=""></p><p>方式1和方式2的区别在于：前者是直接操作标签，后者是把标签作为DOM节点。推荐方式2。</p><h3 id="_2、设置节点的属性值" tabindex="-1"><a class="header-anchor" href="#_2、设置节点的属性值"><span>2、设置节点的属性值</span></a></h3><p>方式1举例：（设置节点的属性值）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    myNode<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&quot;images/2.jpg&quot;</span>   <span class="token comment">//修改src的属性值</span></span>
<span class="line">    myNode<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot;image2-box&quot;</span><span class="token punctuation">;</span>  <span class="token comment">//修改class的name</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>方式2：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	元素节点<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;属性名&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;新的属性值&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>方式2举例：（设置节点的属性值）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    myNode<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;images/3.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    myNode<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;image3-box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    myNode<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、删除节点的属性" tabindex="-1"><a class="header-anchor" href="#_3、删除节点的属性"><span>3、删除节点的属性</span></a></h3><p>格式：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	元素节点<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span>属性名<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>举例：（删除节点的属性）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    myNode<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    myNode<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>获取节点的属性值和设置节点的属性值，都有两种方式。</p><p><strong>如果是节点的“原始属性”</strong>（比如 普通标签的<code>class/className</code>属性、普通标签的<code>style</code>属性、普通标签的 title属性、img 标签的<code>src</code>属性、超链接的<code>href</code>属性等），<strong>方式1和方式2是等价的</strong>，可以混用。怎么理解混用呢？比如说：用 <code>div.title = &#39;我是标题&#39;</code>设置属性，用 <code>div.getAttribute(&#39;title&#39;)</code>获取属性，就是混用。</p><p>但如果是节点的“非原始属性”，比如：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">div<span class="token punctuation">.</span>aaa <span class="token operator">=</span> <span class="token string">&#39;qianguyihao&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">div<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;qianguyihao&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的这个“非原始属性”，在使用这两种方式时，是有区别的。区别如下：</p><ul><li><p>方式1 的<code>元素节点.属性</code>和<code>元素节点[属性]</code>：绑定的属性值不会出现在标签上。</p></li><li><p>方式2 的<code>get/set/removeAttribut</code>：绑定的属性值会出现在标签上。</p></li><li><p><strong>这两种方式不能交换使用</strong>，get值和set值必须使用同一种方法。</p></li></ul><p>举例：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>主体<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>asdfasdfadsfd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>我爱你中国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//采用方式一进行set</span></span>
<span class="line">    div<span class="token punctuation">.</span>aaaa <span class="token operator">=</span> <span class="token string">&quot;1111&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>aaaa<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//打印结果：1111。可以打印出来，但是不会出现在标签上</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//采用方式二进行set</span></span>
<span class="line">    div<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;bbbb&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2222&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//bbbb作为新增的属性，会出现在标签上</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;aaaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//打印结果：null。因为方式一的set，无法采用方式二进行get。</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>bbbb<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">//打印结果：undefined。因为方式二的set，无法采用方式一进行get。</span></span>
<span class="line"></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dom对象的属性-补充" tabindex="-1"><a class="header-anchor" href="#dom对象的属性-补充"><span>DOM对象的属性-补充</span></a></h2><h3 id="innerhtml和innertext的区别" tabindex="-1"><a class="header-anchor" href="#innerhtml和innertext的区别"><span>innerHTML和innerText的区别</span></a></h3><ul><li><p>value：标签的value属性。</p></li><li><p><strong>innerHTML</strong>：双闭合标签里面的内容（包含标签）。</p></li><li><p><strong>innerText</strong>：双闭合标签里面的内容（不包含标签）。（老版本的火狐用textContent）</p></li></ul><p><strong>获取内容举例：</strong></p><p>如果我们想获取innerHTML和innerText里的内容，看看会如何：（innerHTML会获取到标签本身，而innerText则不会）</p><p><img src="http://img.smyhvae.com/20180127_1652.png" alt=""></p><p><strong>修改内容举例：</strong>（innerHTML会修改标签本身，而innerText则不会）</p><p><img src="http://img.smyhvae.com/20180127_1657.png" alt=""></p><h3 id="nodetype属性" tabindex="-1"><a class="header-anchor" href="#nodetype属性"><span>nodeType属性</span></a></h3><p>这里讲一下nodeType属性。</p><ul><li><p><strong>nodeType == 1 表示的是元素节点</strong>（标签） 。记住：在这里，元素就是标签。</p></li><li><p>nodeType == 2 表示是属性节点。</p></li><li><p>nodeType == 3 是文本节点。</p></li></ul><h3 id="nodetype、nodename、nodevalue" tabindex="-1"><a class="header-anchor" href="#nodetype、nodename、nodevalue"><span>nodeType、nodeName、nodeValue</span></a></h3><p>我们那下面这个标签来举例：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>111<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    生命壹号</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这个标签就包含了三种节点：</p><ul><li><p>元素节点（标签）</p></li><li><p>属性节点</p></li><li><p>文本节点</p></li></ul><p>获取这三个节点的方式如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取元素节点（标签）</span></span>
<span class="line">    <span class="token keyword">var</span> attribute <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getAttributeNode</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取box1的属性节点</span></span>
<span class="line">    <span class="token keyword">var</span> txt <span class="token operator">=</span> element<span class="token punctuation">.</span>firstChild<span class="token punctuation">;</span>                   <span class="token comment">//获取box1的文本节点</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> value <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//获取id的属性值</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>attribute<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果如下：</p><p><img src="http://img.smyhvae.com/20180128_1935.png" alt=""></p><p>既然这三个都是节点，如果我想获取它们的nodeType、nodeName、nodeValue，代码如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取元素节点（标签）</span></span>
<span class="line">    <span class="token keyword">var</span> attribute <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getAttributeNode</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取box1的属性节点</span></span>
<span class="line">    <span class="token keyword">var</span> txt <span class="token operator">=</span> element<span class="token punctuation">.</span>firstChild<span class="token punctuation">;</span>                   <span class="token comment">//获取box1的文本节点</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//获取nodeType</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//1</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>attribute<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//2</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>txt<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//3</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//获取nodeName</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//DIV</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>attribute<span class="token punctuation">.</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//id</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>txt<span class="token punctuation">.</span>nodeName<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//#text</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//获取nodeValue</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>nodeValue<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//null</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>attribute<span class="token punctuation">.</span>nodeValue<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//box1</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>txt<span class="token punctuation">.</span>nodeValue<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//生命壹号</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果如下：</p><p><img src="http://img.smyhvae.com/20180128_1939.png" alt=""></p><h2 id="文档的加载" tabindex="-1"><a class="header-anchor" href="#文档的加载"><span>文档的加载</span></a></h2><p>浏览器在加载一个页面时，是按照自上向下的顺序加载的，读取到一行就运行一行。如果将script标签写到页面的上边，在代码执行时，页面还没有加载，页面没有加载DOM对象也没有加载，会导致无法获取到DOM对象。</p><p><strong>onload 事件</strong>：</p><p>onload 事件会在整个页面加载完成之后才触发。为 window 绑定一个onload事件，该事件对应的响应函数将会在页面加载完成之后执行，这样可以确保我们的代码执行时所有的DOM对象已经加载完毕了。</p><p>代码举例：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">      <span class="token comment">// 【方式一：先加载，后执行】这段 js 代码是写在 &lt;head&gt; 标签里的，所以建议放在 window.onload 里面。</span></span>
<span class="line">      window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 获取id为btn的按钮</span></span>
<span class="line">        <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 为按钮绑定点击事件</span></span>
<span class="line">        btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点我一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">      <span class="token comment">// 【方式二：后加载，后执行】这段 js 代码是写在 &lt;body&gt; 标签里的，代码的位置是处在页面的下方。这么做，也可以确保：在页面加载完毕后，再执行 js 代码。</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 获取id为btn的按钮</span></span>
<span class="line">      <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// 为按钮绑定点击事件</span></span>
<span class="line">      btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上方代码中，方式一和方式二均可以确保：在页面加载完毕后，再执行 js 代码。</p><h2 id="我的公众号" tabindex="-1"><a class="header-anchor" href="#我的公众号"><span>我的公众号</span></a></h2><p>想学习<strong>更多技能</strong>？不妨关注我的微信公众号：<strong>千古壹号</strong>（id：<code>qianguyihao</code>）。</p><p>扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：</p><p><img src="http://img.smyhvae.com/20190101.png" alt=""></p>`,196)]))}const i=s(e,[["render",l],["__file","36-DOM简介和DOM操作.html.vue"]]),u=JSON.parse('{"path":"/Frontend/04-JavaScript%E5%9F%BA%E7%A1%80/36-DOM%E7%AE%80%E4%BB%8B%E5%92%8CDOM%E6%93%8D%E4%BD%9C.html","title":"36-DOM简介和DOM操作","lang":"en-US","frontmatter":{"title":"36-DOM简介和DOM操作","publish":true},"headers":[{"level":2,"title":"常见概念","slug":"常见概念","link":"#常见概念","children":[{"level":3,"title":"JavaScript的组成","slug":"javascript的组成","link":"#javascript的组成","children":[]},{"level":3,"title":"节点","slug":"节点","link":"#节点","children":[]},{"level":3,"title":"什么是DOM","slug":"什么是dom","link":"#什么是dom","children":[]},{"level":3,"title":"DOM可以做什么","slug":"dom可以做什么","link":"#dom可以做什么","children":[]}]},{"level":2,"title":"元素节点的获取","slug":"元素节点的获取","link":"#元素节点的获取","children":[]},{"level":2,"title":"DOM访问关系的获取","slug":"dom访问关系的获取","link":"#dom访问关系的获取","children":[{"level":3,"title":"获取父节点","slug":"获取父节点","link":"#获取父节点","children":[]},{"level":3,"title":"获取兄弟节点","slug":"获取兄弟节点","link":"#获取兄弟节点","children":[]},{"level":3,"title":"获取单个的子节点","slug":"获取单个的子节点","link":"#获取单个的子节点","children":[]},{"level":3,"title":"获取所有的子节点","slug":"获取所有的子节点","link":"#获取所有的子节点","children":[]}]},{"level":2,"title":"DOM节点的操作（重要）","slug":"dom节点的操作-重要","link":"#dom节点的操作-重要","children":[{"level":3,"title":"创建节点","slug":"创建节点","link":"#创建节点","children":[]},{"level":3,"title":"插入节点","slug":"插入节点","link":"#插入节点","children":[]},{"level":3,"title":"删除节点","slug":"删除节点","link":"#删除节点","children":[]},{"level":3,"title":"复制节点（克隆节点）","slug":"复制节点-克隆节点","link":"#复制节点-克隆节点","children":[]}]},{"level":2,"title":"设置节点的属性","slug":"设置节点的属性","link":"#设置节点的属性","children":[{"level":3,"title":"1、获取节点的属性值","slug":"_1、获取节点的属性值","link":"#_1、获取节点的属性值","children":[]},{"level":3,"title":"2、设置节点的属性值","slug":"_2、设置节点的属性值","link":"#_2、设置节点的属性值","children":[]},{"level":3,"title":"3、删除节点的属性","slug":"_3、删除节点的属性","link":"#_3、删除节点的属性","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"DOM对象的属性-补充","slug":"dom对象的属性-补充","link":"#dom对象的属性-补充","children":[{"level":3,"title":"innerHTML和innerText的区别","slug":"innerhtml和innertext的区别","link":"#innerhtml和innertext的区别","children":[]},{"level":3,"title":"nodeType属性","slug":"nodetype属性","link":"#nodetype属性","children":[]},{"level":3,"title":"nodeType、nodeName、nodeValue","slug":"nodetype、nodename、nodevalue","link":"#nodetype、nodename、nodevalue","children":[]}]},{"level":2,"title":"文档的加载","slug":"文档的加载","link":"#文档的加载","children":[]},{"level":2,"title":"我的公众号","slug":"我的公众号","link":"#我的公众号","children":[]}],"git":{"updatedTime":1735788687000,"contributors":[{"name":"Jasmine Mo","username":"Jasmine Mo","email":"loxluthor@gmail.com","commits":1,"url":"https://github.com/Jasmine Mo"}]},"filePathRelative":"Frontend/04-JavaScript基础/36-DOM简介和DOM操作.md"}');export{i as comp,u as data};
