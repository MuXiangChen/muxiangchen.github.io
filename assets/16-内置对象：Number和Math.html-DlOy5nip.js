import{_ as s,c as a,e as t,o as e}from"./app-gihhjKhR.js";const p={};function l(i,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h2 id="内置对象-number-的常见方法" tabindex="-1"><a class="header-anchor" href="#内置对象-number-的常见方法"><span>内置对象 Number 的常见方法</span></a></h2><h3 id="number-isinteger-判断是否为整数" tabindex="-1"><a class="header-anchor" href="#number-isinteger-判断是否为整数"><span>Number.isInteger() 判断是否为整数</span></a></h3><p>语法：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">布尔值 = Number.isInteger(数字);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="tofixed-小数点后面保留多少位" tabindex="-1"><a class="header-anchor" href="#tofixed-小数点后面保留多少位"><span>toFixed() 小数点后面保留多少位</span></a></h3><p>语法：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">字符串 <span class="token operator">=</span> myNum<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：将数字 myNum 的小数点后面保留 num 位小数（四舍五入），并返回。不会改变原数字。注意，<strong>返回结果是字符串</strong>。</p><p>参数 num：指定了小数点后面的位数。</p><p>举例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">3.456</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> num2 <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印结果：3.456</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印结果：3.46</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> num2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上方代码中，<code>num2</code>的结果是3.46，但是请注意，<code>num</code>的类型Number型，而<code>num2</code>的类型却是String型。</p><h2 id="内置对象-math-的常见方法" tabindex="-1"><a class="header-anchor" href="#内置对象-math-的常见方法"><span>内置对象 Math 的常见方法</span></a></h2><p>Math 和其他的对象不同，它不是一个构造函数，不需要创建对象。所以我们不需要 通过 new 来调用，而是直接使用里面的属性和方法即可。</p><p>Math属于一个工具类，里面封装了数学运算相关的属性和方法。如下：</p><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Math.PI</td><td style="text-align:left;">圆周率</td><td style="text-align:left;">Math对象的属性</td></tr><tr><td style="text-align:left;">Math.abs()</td><td style="text-align:left;"><strong>返回绝对值</strong></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Math.random()</td><td style="text-align:left;">生成0-1之间的<strong>随机浮点数</strong></td><td style="text-align:left;">取值范围是 [0，1)</td></tr><tr><td style="text-align:left;">Math.floor()</td><td style="text-align:left;"><strong>向下取整</strong>（往小取值）</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Math.ceil()</td><td style="text-align:left;"><strong>向上取整</strong>（往大取值）</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Math.round()</td><td style="text-align:left;">四舍五入取整（正数四舍五入，负数五舍六入）</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Math.max(x, y, z)</td><td style="text-align:left;">返回多个数中的最大值</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Math.min(x, y, z)</td><td style="text-align:left;">返回多个数中的最小值</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Math.pow(x,y)</td><td style="text-align:left;">乘方：返回 x 的 y 次幂</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Math.sqrt()</td><td style="text-align:left;">开方：对一个数进行开方运算</td><td style="text-align:left;"></td></tr></tbody></table><p><strong>举例</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.6</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//取绝对值</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//向下取整，向小取</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//向上取整，向大取</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//四舍五入取整（正数四舍五入，负数五舍六入）</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//生成0-1之间的随机数</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">    0.6</span>
<span class="line"></span>
<span class="line">    -1</span>
<span class="line"></span>
<span class="line">    -0</span>
<span class="line"></span>
<span class="line">    -1</span>
<span class="line"></span>
<span class="line">    0.6453756205275165</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="math-abs-获绝对值" tabindex="-1"><a class="header-anchor" href="#math-abs-获绝对值"><span>Math.abs()：获绝对值</span></a></h2><p>方法定义：返回绝对值。</p><p>注意：</p><ul><li>参数中可以接收字符串类型的数字，此时会将字符串做隐式类型转换，然后再调用 Math.abs() 方法。</li></ul><p>代码举例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 先做隐式类型转换，将 &#39;-2&#39;转换为数字类型 -2，然后再调用 Math.abs()</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token string">&#39;-2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="math-random-方法-生成随机数" tabindex="-1"><a class="header-anchor" href="#math-random-方法-生成随机数"><span>Math.random() 方法：生成随机数</span></a></h2><p>方法定义：生成 [0, 1) 之间的<strong>随机浮点数</strong>。</p><p>我们来看几个例子。</p><h3 id="生成-0-x-之间的随机数" tabindex="-1"><a class="header-anchor" href="#生成-0-x-之间的随机数"><span>生成 [0, x) 之间的随机数</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>x<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="生成-x-y-之间的随机数" tabindex="-1"><a class="header-anchor" href="#生成-x-y-之间的随机数"><span>生成 [x, y) 之间的随机数</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>y<span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token operator">+</span>x<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="【重要】生成-x-y-之间的随机整数" tabindex="-1"><a class="header-anchor" href="#【重要】生成-x-y-之间的随机整数"><span>【重要】生成 [x, y]之间的随机整数</span></a></h3><p>也就是说：生成两个整数之间的随机整数，<strong>并且要包含这两个整数</strong>。</p><p>这个功能很常用，我们可以将其封装成一个方法，代码实现如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token comment">/*</span>
<span class="line">    * 生成两个整数之间的随机整数，并且要包含这两个整数</span>
<span class="line">    */</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="举例-随机点名" tabindex="-1"><a class="header-anchor" href="#举例-随机点名"><span>举例：随机点名</span></a></h3><p>根据上面的例子，我们还可以再延伸一下，来看看随机点名的例子。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token comment">/*</span>
<span class="line">    * 生成两个整数之间的随机整数，并且要包含这两个整数</span>
<span class="line">    */</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;许嵩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;邓紫棋&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;毛不易&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;解忧邵帅&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成随机的index</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 随机点名</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pow-乘方" tabindex="-1"><a class="header-anchor" href="#pow-乘方"><span>pow()：乘方</span></a></h2><p>如果想计算 <code>a 的 b 次方</code>，可以使用如下函数：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">	Math.pow(a, b);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Math的中文是“数学”，pow是“幂”。</p><p><strong>举例1：</strong></p><p><img src="http://img.smyhvae.com/20180117_1730.png" alt=""></p><p>代码实现：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">	var a = Math.pow(3, Math.pow(2, 2));</span>
<span class="line">	console.log(a);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>举例2：</strong></p><p><img src="http://img.smyhvae.com/20180117_1740.png" alt=""></p><p>代码实现：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">	var a = Math.pow(Math.pow(3, 2), 4);</span>
<span class="line">	console.log(a);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sqrt-开方" tabindex="-1"><a class="header-anchor" href="#sqrt-开方"><span>sqrt()：开方</span></a></h2><p>如果想计算数值a的开二次方，可以使用如下函数：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">	 Math.sqrt(a);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>sqrt即“square 开方”。比如：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">	var a = Math.sqrt(36);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="url-编码和解码" tabindex="-1"><a class="header-anchor" href="#url-编码和解码"><span>url 编码和解码</span></a></h2><p>URI (Uniform ResourceIdentifiers,通用资源标识符)进行编码，以便发送给浏览器。有效的URI中不能包含某些字符，例如空格。而这URI编码方法就可以对URI进行编码，它们用特殊的UTF-8编码替换所有无效的字符，从而让浏览器能够接受和理解。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//把字符串作为 URI 组件进行编码</span></span>
<span class="line">    <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//把字符串作为 URI 组件进行解码</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;http://www.cnblogs.com/smyhvae/&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                           <span class="token comment">//打印url的编码</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//对url进行编码后，再解码，还原为url</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果：</p><p><img src="http://img.smyhvae.com/20180202_1432.png" alt=""></p><h2 id="赞赏作者" tabindex="-1"><a class="header-anchor" href="#赞赏作者"><span>赞赏作者</span></a></h2><p>创作不易，你的赞赏和认可，是我更新的最大动力：</p><p><img src="https://img.smyhvae.com/20220401_1800.jpg" alt=""></p>`,67)]))}const o=s(p,[["render",l],["__file","16-内置对象：Number和Math.html.vue"]]),u=JSON.parse('{"path":"/Frontend/04-JavaScript%E5%9F%BA%E7%A1%80/16-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%EF%BC%9ANumber%E5%92%8CMath.html","title":"16-内置对象：Number和Math","lang":"en-US","frontmatter":{"title":"16-内置对象：Number和Math"},"headers":[{"level":2,"title":"内置对象 Number 的常见方法","slug":"内置对象-number-的常见方法","link":"#内置对象-number-的常见方法","children":[{"level":3,"title":"Number.isInteger() 判断是否为整数","slug":"number-isinteger-判断是否为整数","link":"#number-isinteger-判断是否为整数","children":[]},{"level":3,"title":"toFixed() 小数点后面保留多少位","slug":"tofixed-小数点后面保留多少位","link":"#tofixed-小数点后面保留多少位","children":[]}]},{"level":2,"title":"内置对象 Math 的常见方法","slug":"内置对象-math-的常见方法","link":"#内置对象-math-的常见方法","children":[]},{"level":2,"title":"Math.abs()：获绝对值","slug":"math-abs-获绝对值","link":"#math-abs-获绝对值","children":[]},{"level":2,"title":"Math.random() 方法：生成随机数","slug":"math-random-方法-生成随机数","link":"#math-random-方法-生成随机数","children":[{"level":3,"title":"生成 [0, x) 之间的随机数","slug":"生成-0-x-之间的随机数","link":"#生成-0-x-之间的随机数","children":[]},{"level":3,"title":"生成 [x, y) 之间的随机数","slug":"生成-x-y-之间的随机数","link":"#生成-x-y-之间的随机数","children":[]},{"level":3,"title":"【重要】生成 [x, y]之间的随机整数","slug":"【重要】生成-x-y-之间的随机整数","link":"#【重要】生成-x-y-之间的随机整数","children":[]},{"level":3,"title":"举例：随机点名","slug":"举例-随机点名","link":"#举例-随机点名","children":[]}]},{"level":2,"title":"pow()：乘方","slug":"pow-乘方","link":"#pow-乘方","children":[]},{"level":2,"title":"sqrt()：开方","slug":"sqrt-开方","link":"#sqrt-开方","children":[]},{"level":2,"title":"url 编码和解码","slug":"url-编码和解码","link":"#url-编码和解码","children":[]},{"level":2,"title":"赞赏作者","slug":"赞赏作者","link":"#赞赏作者","children":[]}],"git":{"updatedTime":1735788687000,"contributors":[{"name":"Jasmine Mo","username":"Jasmine Mo","email":"loxluthor@gmail.com","commits":1,"url":"https://github.com/Jasmine Mo"}]},"filePathRelative":"Frontend/04-JavaScript基础/16-内置对象：Number和Math.md"}');export{o as comp,u as data};
