import{_ as l,c as e,e as t,o as n}from"./app-gihhjKhR.js";const o={};function i(r,a){return n(),e("div",null,a[0]||(a[0]=[t('<h2 id="lazyload" tabindex="-1"><a class="header-anchor" href="#lazyload"><span>lazyload</span></a></h2><p>用的最多的场景是：</p><ul><li><p>图片lazyload</p></li><li><p>组件lazyload</p></li></ul><p>现在一般都单独做css的lazyload或者js的lazyload，因为这种方式，其实还是要加载图片和组件。</p><h3 id="图片lazyload" tabindex="-1"><a class="header-anchor" href="#图片lazyload"><span>图片lazyload</span></a></h3><p>图片一般是页面最大的资源，所以<strong>非首屏</strong>延迟加载很重要（让首屏尽快显示）。</p><h2 id="防抖动-debouncing-和节流阀-throtting" tabindex="-1"><a class="header-anchor" href="#防抖动-debouncing-和节流阀-throtting"><span>防抖动（Debouncing）和节流阀（Throtting）</span></a></h2><p>参考链接：</p><ul><li><a href="http://www.css88.com/archives/7010" target="_blank" rel="noopener noreferrer">实例解析防抖动（Debouncing）和节流阀（Throttling）</a></li></ul>',9)]))}const s=l(o,[["render",i],["__file","lazyload_防抖动和节流阀.html.vue"]]),c=JSON.parse('{"path":"/Frontend/14-%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/lazyload_%E9%98%B2%E6%8A%96%E5%8A%A8%E5%92%8C%E8%8A%82%E6%B5%81%E9%98%80.html","title":"07-自定义按键修饰符&自定义指令","lang":"en-US","frontmatter":{"title":"07-自定义按键修饰符&自定义指令","publish":false},"headers":[{"level":2,"title":"lazyload","slug":"lazyload","link":"#lazyload","children":[{"level":3,"title":"图片lazyload","slug":"图片lazyload","link":"#图片lazyload","children":[]}]},{"level":2,"title":"防抖动（Debouncing）和节流阀（Throtting）","slug":"防抖动-debouncing-和节流阀-throtting","link":"#防抖动-debouncing-和节流阀-throtting","children":[]}],"git":{"updatedTime":1735788687000,"contributors":[{"name":"Jasmine Mo","username":"Jasmine Mo","email":"loxluthor@gmail.com","commits":1,"url":"https://github.com/Jasmine Mo"}]},"filePathRelative":"Frontend/14-前端性能优化/lazyload&防抖动和节流阀.md"}');export{s as comp,c as data};
