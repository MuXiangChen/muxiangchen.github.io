import{_ as n,c as a,e as s,o as l}from"./app-gihhjKhR.js";const i={};function t(p,e){return l(),a("div",null,e[0]||(e[0]=[s(`<h2 id="_2018年4月份" tabindex="-1"><a class="header-anchor" href="#_2018年4月份"><span>2018年4月份</span></a></h2><h3 id="_2018-04-25" tabindex="-1"><a class="header-anchor" href="#_2018-04-25"><span>2018-04-25</span></a></h3><h1 id="_2018年-前端日记" tabindex="-1"><a class="header-anchor" href="#_2018年-前端日记"><span>2018年-前端日记</span></a></h1><ul><li>userAgent相关：<a href="http://www.cnblogs.com/7z7chn/p/5370352.html" target="_blank" rel="noopener noreferrer">判断微信内置浏览器的UserAgent</a></li></ul><h3 id="_2018-04-26" tabindex="-1"><a class="header-anchor" href="#_2018-04-26"><span>2018-04-26</span></a></h3><p><strong>前端相关</strong>：</p><ul><li><p>流程图制作工具：<a href="https://www.processon.com/" target="_blank" rel="noopener noreferrer">ProcessOn</a></p></li><li><p>api方法的浏览器兼容性问题，可以在这个网站上看：<a href="https://caniuse.com/" target="_blank" rel="noopener noreferrer">https://caniuse.com/</a></p></li><li><p>CSS3的兼容性问题，不一定要使用-webkit-, -moz-, -o-, -ms-等私有前缀。可以使用 PostCSS。<a href="https://www.zhihu.com/question/20597072" target="_blank" rel="noopener noreferrer">知乎</a></p></li><li><p>浏览器常见的内核有：V8、WebKit。另外腾讯还有个<a href="http://x5.tencent.com/" target="_blank" rel="noopener noreferrer">X5</a>。</p></li><li><p>要查一下display none 和 visibility hidden的区别。</p></li><li><p>ES 的各个版本在 Node 环境下的支持情况，可以查看这个网站：<a href="http://node.green/" target="_blank" rel="noopener noreferrer">http://node.green/</a></p></li><li><p>promise的实现，关键词：Promises/A、Promises/B、<a href="https://github.com/petkaantonov/bluebird" target="_blank" rel="noopener noreferrer">bluebird</a></p></li></ul><p><strong>综合</strong>：</p><ul><li>whistle安装证书后，可以拦截 https 请求。但是，我现在又不想拦截了，该怎么卸载证书呢？</li></ul><h3 id="_2018-04-27" tabindex="-1"><a class="header-anchor" href="#_2018-04-27"><span>2018-04-27</span></a></h3><ul><li><p><a href="https://github.com/Strider-CD/strider" target="_blank" rel="noopener noreferrer">strider</a>：可以用来部署项目。</p></li><li><p>有必要了解一下电商1.0、电商2.0、电商3.0的概念。</p></li></ul><h3 id="_2018-05-02" tabindex="-1"><a class="header-anchor" href="#_2018-05-02"><span>2018-05-02</span></a></h3><ul><li><p><code>location.pathname</code>：获取 url 的后半部分。参考链接：<a href="http://www.cnblogs.com/itjeff/p/4645262.html" target="_blank" rel="noopener noreferrer">#</a></p></li><li><p>代码解读：<code>callback &amp;&amp; callback()</code>的含义</p></li></ul><h3 id="_2018-05-03" tabindex="-1"><a class="header-anchor" href="#_2018-05-03"><span>2018-05-03</span></a></h3><ul><li><p>各种框架实现的todo项目：<a href="http://todomvc.com/" target="_blank" rel="noopener noreferrer">http://todomvc.com/</a></p></li><li><p>对比 sass、less、stylus 这三个css预处理器，zqc说，后面两个已经不怎么用了。sass 比 less强大，stylus的书写方式比较奇怪。</p></li><li><p>npm命令中，--save 和 --save-dev的区别。参考链接：<a href="http://pwcong.me/2017/01/05/npm%E5%BC%95%E5%85%A5%E6%A8%A1%E5%9D%97%E6%97%B6--save-%E4%B8%8E--save-dev-%E7%9A%84%E5%8C%BA%E5%88%AB/" target="_blank" rel="noopener noreferrer">http://pwcong.me/2017/01/05/npm引入模块时--save-与--save-dev-的区别/</a></p></li></ul><h3 id="_2018-05-07" tabindex="-1"><a class="header-anchor" href="#_2018-05-07"><span>2018-05-07</span></a></h3><ul><li>Vue组件的注册</li></ul><p>有一种组件注册的方式是 Vue+jQuery：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;my-div&#39;</span><span class="token punctuation">,</span> $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token literal-property property">filters</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vueTpl<span class="token punctuation">.</span>subs<span class="token punctuation">.</span>myDiv<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据 zqc 的建议，不一定要使用<code>$.extend()</code>，还可以使用<code>object.assign()</code>。</p><h3 id="_2018-05-08" tabindex="-1"><a class="header-anchor" href="#_2018-05-08"><span>2018-05-08</span></a></h3><ul><li>sku、spu的概念</li></ul><h3 id="_2018-05-09" tabindex="-1"><a class="header-anchor" href="#_2018-05-09"><span>2018-05-09</span></a></h3><ul><li>输入框正则的匹配</li></ul><p>让输入框仅支持输入单个id，且为字符串。如果输入多个id，或者非数字的字符，则自动删除：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token operator">=</span><span class="token string">&quot;querysku = querysku.replace(/\\D/,&#39;&#39;)&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2018-05-10" tabindex="-1"><a class="header-anchor" href="#_2018-05-10"><span>2018-05-10</span></a></h3><ul><li><p>如果在控制台看到网络请求陈功，数据也获取成功，但是在ajax里走的是 error（数据获取失败），说明是 ajax代码的判断逻辑有问题。</p></li><li><p>服务器返回的json数据到底是对象还是字符串？</p></li><li><p>josn数据里的字段，有顺序吗？比如下面这段：</p></li></ul><div class="language-jsonn line-numbers-mode" data-highlighter="prismjs" data-ext="jsonn" data-title="jsonn"><pre><code><span class="line">{</span>
<span class="line">    &quot;1492948848&quot;: {</span>
<span class="line">        &quot;3&quot;: &quot;1&quot;,</span>
<span class="line">        &quot;spec&quot;: &quot;&quot;,</span>
<span class="line">        &quot;imagePath&quot;: &quot;hehe.jpg&quot;,</span>
<span class="line">        &quot;color&quot;: &quot;橘色   &quot;,</span>
<span class="line">        &quot;name&quot;: &quot;【多色可选】丽装铺园纯色百搭简约打底T恤女 橘色 M&quot;,</span>
<span class="line">        &quot;size&quot;: &quot;M&quot;</span>
<span class="line">    },</span>
<span class="line">    &quot;1492948847&quot;: {</span>
<span class="line">        &quot;3&quot;: &quot;1&quot;,</span>
<span class="line">        &quot;spec&quot;: &quot;&quot;,</span>
<span class="line">        &quot;imagePath&quot;: &quot;lala.jpg&quot;,</span>
<span class="line">        &quot;color&quot;: &quot;灰色   &quot;,</span>
<span class="line">        &quot;name&quot;: &quot;【多色可选】丽装铺园纯色百搭简约打底T恤女 灰色 S&quot;,</span>
<span class="line">        &quot;size&quot;: &quot;S  &quot;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>答案：顺序不重要。</p><ul><li><p>Vue开发中，在其他地方用到Vue实例中的数据时，一定要用this，或者是<code>vm.$data.myName</code>之类的。</p></li><li><p>疑问：下面的src路径的前面，为何要加<code>//</code>：</p></li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;img v-bind:src=&quot;&#39;//img14.smyhvae.com/evalpic/s240x240_&#39;+value.imagePath&quot; /&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我发现，控制台看到的输出src中，会自动加上http。如果前面不加<code>//</code>则表示相对路径。</p><h3 id="_2018-05-11" tabindex="-1"><a class="header-anchor" href="#_2018-05-11"><span>2018-05-11</span></a></h3><ul><li>将逗号分隔的字符串，转换为数组： <code>str.split(&quot;,&quot;)</code>。即使数组中只有一个元素，也可以这样用。参考链接：<a href="https://blog.csdn.net/erlian1992/article/details/50561452" target="_blank" rel="noopener noreferrer">#</a></li></ul><h3 id="_2018-05-14" tabindex="-1"><a class="header-anchor" href="#_2018-05-14"><span>2018-05-14</span></a></h3><ul><li><p>ajax发的是post请求，但是后台却只收到了部分数据怎么办？答案：前端的post请求记得加content-type字段，否则会被识别成 get 请求。</p></li><li><p>获取jsonp的数据，只能用get请求。如果要用post请求，那就传json数据，另外，可能还要解决跨域的问题。跨域需要在后台配置，三行代码即可。</p></li><li><p>p标签里的文字溢出怎么办？</p></li><li><p>whistle该怎样mock数据？</p></li></ul><h3 id="_2018-05-16" tabindex="-1"><a class="header-anchor" href="#_2018-05-16"><span>2018-05-16</span></a></h3><ul><li><p>在控制台看标签的样式，发现有些样式是出现在<code>element.style</code>中的（比如图片的尺寸），但是在代码里并没有找到。那是因为，这些样式是在 js 代码中<strong>计算</strong>出来的。</p></li><li><p>图片自适应显示</p></li><li><p><a href="http://www.zhangxinxu.com/wordpress/2012/09/new-viewport-relative-units-vw-vh-vm-vmin/" target="_blank" rel="noopener noreferrer">视区相关单位vw, vh..简介以及可实际应用场景</a></p></li><li><p>jingwen推荐的iconMoon图标网站。网址：<a href="https://icomoon.io/" target="_blank" rel="noopener noreferrer">https://icomoon.io/</a></p></li></ul><h3 id="_2018-06-01" tabindex="-1"><a class="header-anchor" href="#_2018-06-01"><span>2018-06-01</span></a></h3><ul><li><code>PingFangSC</code>字体是iOS独有的字体。<code>PingFangSC-Regular</code>是常规字体，<code>PingFangSC-Semibold</code>是加粗字体。如果我在代码里设置了这个字体，那么，ios上可以看到效果，但是Android上看不到效果，仍然会采用Android系统默认的字体。</li></ul><h3 id="_2018-06-04" tabindex="-1"><a class="header-anchor" href="#_2018-06-04"><span>2018-06-04</span></a></h3><p><strong>1、git相关</strong>：</p><p>把 branch1 中的某条记录(比如myLog)，提交到 branch2中。做法如下：</p><p>先切换到branch2中，然后输入如下命令：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git cherry-pick myLog</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2018-06-05" tabindex="-1"><a class="header-anchor" href="#_2018-06-05"><span>2018-06-05</span></a></h3><p><strong>1、font-size</strong>：</p><p><code>font-size</code>的最小值为12。</p><p>也就是说，浏览器的最小字体为12，要是再小于这个值，是不生效的。如果想要小于12，需要在浏览器的高级设置里去修改。</p><p><strong>2、git 多分支同时开发</strong>：</p><p>现在有这样一个场景：我要同时开发一个项目里的两个功能。今天上午开发功能1，下午开发功能2。明天上午改功能1的bug，明天下午改功能2的bug。</p><p>相当于是，我现在是<strong>并行</strong>开发两个功能了，要怎么通过git来进行协作呢？</p><p>目前考虑到的姣好的方式是：</p><ul><li><p>从master拉分支<code>branch1</code>，此分支专门用来开发功能1，改功能1的bug。</p></li><li><p>再从master拉分支<code>branch2</code>，此分支专门用来开发功能2，改功能2的bug。</p></li></ul><p>以后需要上线哪个功能，就从那个分支merge代码到master。</p><p><strong>3、其他</strong>：</p><ul><li><p>两个span之间默认有5px的 margin</p></li><li><p><strong>shadow-root</strong>：下一代。</p></li></ul><h3 id="_2018-06-07" tabindex="-1"><a class="header-anchor" href="#_2018-06-07"><span>2018-06-07</span></a></h3><ul><li><p><a href="https://www.teakki.com/p/57dfb44cd3a7507f975e91e4" target="_blank" rel="noopener noreferrer">原生js实现淡入淡出效果</a></p></li><li><p>通过 jQuery 获取Dom的时候，比如<code>$(&#39;#topNavTop&#39;).css(&#39;background&#39;,&#39;red&#39;)</code>记得要指明是 id 还是 class。</p></li><li><p>每次开发一个新的需求，记得要问清楚：“H5和小程序”都要做吗？要做的话，工作量基本乘以2。</p></li></ul><h3 id="_2018-06-14" tabindex="-1"><a class="header-anchor" href="#_2018-06-14"><span>2018-06-14</span></a></h3><ul><li>pv、uv的概念</li></ul><h3 id="_2018-06-21" tabindex="-1"><a class="header-anchor" href="#_2018-06-21"><span>2018-06-21</span></a></h3><ul><li>今天学会了 iPhone上WebApp的真机调试，感觉很高端呀。具体可以看我在本文件夹中写的《前端开发积累》这篇文章。</li></ul><h3 id="_2018-06-27" tabindex="-1"><a class="header-anchor" href="#_2018-06-27"><span>2018-06-27</span></a></h3><p>没想到，<code>&#39;&#39;</code>和<code>&#39; &#39;</code>竟然还有区别。</p><h3 id="_2018-06-30" tabindex="-1"><a class="header-anchor" href="#_2018-06-30"><span>2018-06-30</span></a></h3><p><strong>并列条件</strong>：</p><p>来看下面这段代码：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">        <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">50</span> <span class="token operator">&lt;</span> num <span class="token operator">&lt;=</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码，你认为打印的结果是什么？其实，它打印的结果是 true。</p><p>如果我们要实现并列条件，千万不要使用 <code>if(50 &lt; num &lt; 70)</code>，而是要使用<code>if(num &gt; 50 &amp;&amp; num &lt;=70)</code>。</p><h3 id="_2018-07-16" tabindex="-1"><a class="header-anchor" href="#_2018-07-16"><span>2018-07-16</span></a></h3><p><strong>FAQ：问答系统</strong></p><p>FAQ是英文<code>Frequently Asked Questions</code>的缩写，中文意思就是“经常问到的问题”，或者更通俗地叫做“常见问题解答”。</p><h3 id="_2018-08-03" tabindex="-1"><a class="header-anchor" href="#_2018-08-03"><span>2018-08-03</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token number">0.123</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> temp2 <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>上方代码中，<code>temp2</code>的结果是0.12，但是请注意，<code>temp</code>的类型Number型，而<code>temp2</code>的类型却是String型。</p><h3 id="_2018-08-15" tabindex="-1"><a class="header-anchor" href="#_2018-08-15"><span>2018-08-15</span></a></h3><p>flex布局常用的三行代码：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">    display: flex;</span>
<span class="line">    justify-content: center; // 子元素在横轴的对齐方式 （左右居中）</span>
<span class="line">    align-items: center;  // 子元素在竖轴的对齐方式（上下居中）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2018-08-16" tabindex="-1"><a class="header-anchor" href="#_2018-08-16"><span>2018-08-16</span></a></h3><p>用CSS3 transition属性实现淡入淡出轮播图：<a href="https://segmentfault.com/a/1190000007648070" target="_blank" rel="noopener noreferrer">https://segmentfault.com/a/1190000007648070</a></p><h3 id="_2018-08-20" tabindex="-1"><a class="header-anchor" href="#_2018-08-20"><span>2018-08-20</span></a></h3><p><strong>小程序问题</strong>：</p><p>用小程序调试时，如果出现故障（比如item点击无响应），可能是微信开发者工具IDE的版本太低了。注意，IDE上上虽然提示是最新版，但不一定是官网的最新版。所以，要去官网下载最新版。</p><p>如果还是不行，看看是不是自己的代码写错了。有时候，代码写错了，不一定会有报错提示哦。</p><p><strong>css问题</strong>：</p><ul><li>css3实现的switch开关按钮：<a href="https://codepen.io/chutou/pen/qdGZQr" target="_blank" rel="noopener noreferrer">https://codepen.io/chutou/pen/qdGZQr</a></li></ul><h3 id="_2018-08-22" tabindex="-1"><a class="header-anchor" href="#_2018-08-22"><span>2018-08-22</span></a></h3><p><strong>两个span之间去空格</strong></p><ul><li>html+css如何删除行内元素之间的空白/空隙：<a href="http://www.manongjc.com/article/2171.html" target="_blank" rel="noopener noreferrer">http://www.manongjc.com/article/2171.html</a></li></ul><p>方法二亲测有效：让父亲的font-size为0，然后具体设置子元素的font-size</p><ul><li>去除inline-block元素间间距的N种方法：<a href="https://www.zhangxinxu.com/wordpress/2012/04/inline-block-space-remove-%E5%8E%BB%E9%99%A4%E9%97%B4%E8%B7%9D/" target="_blank" rel="noopener noreferrer">https://www.zhangxinxu.com/wordpress/2012/04/inline-block-space-remove-去除间距/</a></li></ul><h3 id="_2018-08-28-修改用户的cookie" tabindex="-1"><a class="header-anchor" href="#_2018-08-28-修改用户的cookie"><span>2018-08-28-修改用户的cookie</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">    document.cookie=&quot;visitkey=98&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2018-09-20" tabindex="-1"><a class="header-anchor" href="#_2018-09-20"><span>2018-09-20</span></a></h3><p>需求：当导航条滚动到屏幕顶部时（举例顶部的距离 &lt; 0时），就设置导航条为fixed。</p><p>实现：如果要设置为导航条为fixed，正确的做法应该是：给导航条这个父亲一个高度进行占位，然后让导航条的儿子为fixed。而不是让父亲为 fixed。</p><h3 id="_2018-09-27" tabindex="-1"><a class="header-anchor" href="#_2018-09-27"><span>2018-09-27</span></a></h3><p>如何让微信小程序禁止下拉_解决小程序下拉出现空白的情况：http://www.fly63.com/article/detial/1069</p><p>我遇到问题的原因是：背景图太大，超出了视图。</p><h3 id="_2018-10-12" tabindex="-1"><a class="header-anchor" href="#_2018-10-12"><span>2018-10-12</span></a></h3><p>小程序代码中，如果我这样写view的度样式：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">height: 60rpx;</span>
<span class="line">line-height: 1.5rem;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的这种写法，并不会让里面的文字上下居中，我在 iPhone 7 plus 中看到的结果是：文字偏上移。</p><p>正确的做法是：（单位一致用rpx，不要把两个单位混用）</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">height: 60rpx;</span>
<span class="line">line-height: 60rpx;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2018-10-21" tabindex="-1"><a class="header-anchor" href="#_2018-10-21"><span>2018-10-21</span></a></h3><p>时间戳和年月日的转换：<a href="https://blog.csdn.net/qq_26747571/article/details/53289120?locationNum=10&amp;fps=1" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_26747571/article/details/53289120?locationNum=10&amp;fps=1</a></p><h3 id="_2018-11-28" tabindex="-1"><a class="header-anchor" href="#_2018-11-28"><span>2018-11-28</span></a></h3><p>css实现圆环进度条：<a href="https://blog.csdn.net/wanglei1991gao/article/details/80009252" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/wanglei1991gao/article/details/80009252</a></p><h3 id="_2018-12-13" tabindex="-1"><a class="header-anchor" href="#_2018-12-13"><span>2018-12-13</span></a></h3><p>对象数组通过对象的属性进行排序：<a href="https://blog.csdn.net/xiaobing_hope/article/details/68638706" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/xiaobing_hope/article/details/68638706</a></p>`,114)]))}const o=n(i,[["render",t],["__file","2018年-前端日记.html.vue"]]),c=JSON.parse('{"path":"/Frontend/16-%E5%89%8D%E7%AB%AF%E7%BB%BC%E5%90%88/2018%E5%B9%B4-%E5%89%8D%E7%AB%AF%E6%97%A5%E8%AE%B0.html","title":"2018年-前端日记","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"2018年4月份","slug":"_2018年4月份","link":"#_2018年4月份","children":[{"level":3,"title":"2018-04-25","slug":"_2018-04-25","link":"#_2018-04-25","children":[]},{"level":3,"title":"2018-04-26","slug":"_2018-04-26","link":"#_2018-04-26","children":[]},{"level":3,"title":"2018-04-27","slug":"_2018-04-27","link":"#_2018-04-27","children":[]},{"level":3,"title":"2018-05-02","slug":"_2018-05-02","link":"#_2018-05-02","children":[]},{"level":3,"title":"2018-05-03","slug":"_2018-05-03","link":"#_2018-05-03","children":[]},{"level":3,"title":"2018-05-07","slug":"_2018-05-07","link":"#_2018-05-07","children":[]},{"level":3,"title":"2018-05-08","slug":"_2018-05-08","link":"#_2018-05-08","children":[]},{"level":3,"title":"2018-05-09","slug":"_2018-05-09","link":"#_2018-05-09","children":[]},{"level":3,"title":"2018-05-10","slug":"_2018-05-10","link":"#_2018-05-10","children":[]},{"level":3,"title":"2018-05-11","slug":"_2018-05-11","link":"#_2018-05-11","children":[]},{"level":3,"title":"2018-05-14","slug":"_2018-05-14","link":"#_2018-05-14","children":[]},{"level":3,"title":"2018-05-16","slug":"_2018-05-16","link":"#_2018-05-16","children":[]},{"level":3,"title":"2018-06-01","slug":"_2018-06-01","link":"#_2018-06-01","children":[]},{"level":3,"title":"2018-06-04","slug":"_2018-06-04","link":"#_2018-06-04","children":[]},{"level":3,"title":"2018-06-05","slug":"_2018-06-05","link":"#_2018-06-05","children":[]},{"level":3,"title":"2018-06-07","slug":"_2018-06-07","link":"#_2018-06-07","children":[]},{"level":3,"title":"2018-06-14","slug":"_2018-06-14","link":"#_2018-06-14","children":[]},{"level":3,"title":"2018-06-21","slug":"_2018-06-21","link":"#_2018-06-21","children":[]},{"level":3,"title":"2018-06-27","slug":"_2018-06-27","link":"#_2018-06-27","children":[]},{"level":3,"title":"2018-06-30","slug":"_2018-06-30","link":"#_2018-06-30","children":[]},{"level":3,"title":"2018-07-16","slug":"_2018-07-16","link":"#_2018-07-16","children":[]},{"level":3,"title":"2018-08-03","slug":"_2018-08-03","link":"#_2018-08-03","children":[]},{"level":3,"title":"2018-08-15","slug":"_2018-08-15","link":"#_2018-08-15","children":[]},{"level":3,"title":"2018-08-16","slug":"_2018-08-16","link":"#_2018-08-16","children":[]},{"level":3,"title":"2018-08-20","slug":"_2018-08-20","link":"#_2018-08-20","children":[]},{"level":3,"title":"2018-08-22","slug":"_2018-08-22","link":"#_2018-08-22","children":[]},{"level":3,"title":"2018-08-28-修改用户的cookie","slug":"_2018-08-28-修改用户的cookie","link":"#_2018-08-28-修改用户的cookie","children":[]},{"level":3,"title":"2018-09-20","slug":"_2018-09-20","link":"#_2018-09-20","children":[]},{"level":3,"title":"2018-09-27","slug":"_2018-09-27","link":"#_2018-09-27","children":[]},{"level":3,"title":"2018-10-12","slug":"_2018-10-12","link":"#_2018-10-12","children":[]},{"level":3,"title":"2018-10-21","slug":"_2018-10-21","link":"#_2018-10-21","children":[]},{"level":3,"title":"2018-11-28","slug":"_2018-11-28","link":"#_2018-11-28","children":[]},{"level":3,"title":"2018-12-13","slug":"_2018-12-13","link":"#_2018-12-13","children":[]}]}],"git":{"updatedTime":1735791502000,"contributors":[{"name":"Jasmine Mo","username":"Jasmine Mo","email":"loxluthor@gmail.com","commits":2,"url":"https://github.com/Jasmine Mo"}]},"filePathRelative":"Frontend/16-前端综合/2018年-前端日记.md"}');export{o as comp,c as data};
