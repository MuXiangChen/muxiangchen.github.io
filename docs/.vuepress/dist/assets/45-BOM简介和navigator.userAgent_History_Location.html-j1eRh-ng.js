import{_ as t,c as p,e as i,a as s,f as a,b as l,d as o,r as c,o as r}from"./app-gihhjKhR.js";const u={};function d(g,n){const e=c("font");return r(),p("div",null,[n[7]||(n[7]=i(`<h1 id="_45-bom简介和navigator-useragent-history-location" tabindex="-1"><a class="header-anchor" href="#_45-bom简介和navigator-useragent-history-location"><span>45-BOM简介和navigator.userAgent&amp;History&amp;Location</span></a></h1><h2 id="常见概念" tabindex="-1"><a class="header-anchor" href="#常见概念"><span>常见概念</span></a></h2><h3 id="javascript的组成" tabindex="-1"><a class="header-anchor" href="#javascript的组成"><span>JavaScript的组成</span></a></h3><p>JavaScript基础分为三个部分：</p><ul><li><p>ECMAScript：JavaScript的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等。</p></li><li><p><strong>DOM</strong>：文档对象模型（Document object Model），操作<strong>网页上的元素</strong>的API。比如让盒子移动、变色、轮播图等。</p></li><li><p><strong>BOM</strong>：浏览器对象模型（Browser Object Model），操作<strong>浏览器部分功能</strong>的API。比如让浏览器自动滚动。</p></li></ul><h3 id="常见的-bom-对象" tabindex="-1"><a class="header-anchor" href="#常见的-bom-对象"><span>常见的 BOM 对象</span></a></h3><p>BOM可以让我们通过JS来操作浏览器。BOM中为我们提供了一些对象，来完成对浏览器相关的操作。</p><p>常见的 BOM对象有：</p><ul><li><p>Window：代表整个浏览器的窗口，同时 window 也是网页中的全局对象。</p></li><li><p>Navigator：代表当前浏览器的信息，通过该对象可以识别不同的浏览器。</p></li><li><p>Location：代表当前浏览器的地址栏信息，通过 Location 可以获取地址栏信息，或者操作浏览器跳转页面。</p></li><li><p>History：代表浏览器的历史记录，通过该对象可以操作浏览器的历史记录。由于隐私原因，该对象不能获取到具体的历史记录，只能操作浏览器向前或向后翻页，而且该操作只在当次访问时有效。</p></li><li><p>Screen：代表用户的屏幕信息，通过该对象可以获取用户的显示器的相关信息。</p></li></ul><p>备注：这些 BOM 对象都是作为 window 对象的属性保存的，可以通过window对象来使用，也可以直接使用。比如说，我可以使用 <code>window.location.href</code>，也可以直接使用 <code>location.href</code>，二者是等价的。</p><p>备注2：不要忘了，之前学习过的<code>document</code>也是在<code>window</code>中保存的。</p><p>这篇文章，我们先来讲一下 几个常见的 BOM 对象。</p><h2 id="navigator-和-navigator-useragent" tabindex="-1"><a class="header-anchor" href="#navigator-和-navigator-useragent"><span>Navigator 和 <code>navigator.userAgent</code></span></a></h2><p><code>Navigator</code>代表当前浏览器的信息，通过该对象可以识别不同的浏览器。</p><p>由于历史原因，Navigator对象中的大部分属性都已经不能帮助我们识别浏览器了。</p><p><strong>一般我们只会使用<code>navigator.userAgent</code>来获取浏览器的信息</strong>。</p><p>userAgent 的值是一个字符串，简称 <strong>UA</strong>，这个字符串中包含了用来描述浏览器信息的内容，不同的浏览器会有不同的userAgent。</p><p><strong>代码举例</strong>：（获取当前浏览器的UA）</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">            <span class="token keyword">var</span> ua <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span> <span class="token comment">// 获取当前浏览器的 userAgent</span></span>
<span class="line"></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;qianguyihao 当前浏览器的UA是：&#39;</span> <span class="token operator">+</span> ua<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">firefox</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;是火狐浏览器&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">chrome</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;是Chrome浏览器&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">msie</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;是IE浏览器&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;ActiveXObject&#39;</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;是 IE11 浏览器&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在电脑上模拟移动端浏览器" tabindex="-1"><a class="header-anchor" href="#在电脑上模拟移动端浏览器"><span>在电脑上模拟移动端浏览器</span></a></h3><p>不同浏览器（包括微信内置的浏览器）的 userAgent 信息，是不一样的，我们可以根据 <code>navigator.userAgent</code>属性来获取。</p><p>比如说，我们在电脑浏览器上，按F12，然后在控制台输入<code>navigator.userAgent</code>，如下：</p><p><img src="http://img.smyhvae.com/20180425_1656.png" alt=""></p><p>上图显示，MacOS上的Chrome浏览器的 userAgent 是：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.117 Safari/537.36&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们还可以在电脑浏览器的控制台里可以添加很多设备，通过这种方式，可以模拟移动端浏览器的场景，非常有用，请务必掌握。操作如下：</p><p>（1）需要点击 edit，手动添加：</p><p><img src="http://img.smyhvae.com/20191127_1903.png" alt=""></p><p>（2）添加时，根据 User agent 来识别不同的浏览器：</p><p><img src="http://img.smyhvae.com/20191127_1918.png" alt=""></p><h3 id="不同浏览器的-useragent" tabindex="-1"><a class="header-anchor" href="#不同浏览器的-useragent"><span>不同浏览器的 userAgent</span></a></h3><p>iOS 版微信浏览器：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Mozilla/5.0 (iPhone; CPU iPhone OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13E233 MicroMessenger/6.3.15 NetType/WIFI Language/zh_CN</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Android 版微信浏览器：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Mozilla/5.0 (Linux; Android 5.0.1; GT-I9502 Build/LRX22C; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36 MicroMessenger/6.1.0.78_r1129455.543 NetType/WIFI</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>iOS 版本QQ浏览器：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_2 like Mac OS X) AppleWebKit/604.4.7 (KHTML, like Gecko) Mobile/15C202 QQ/7.3.5.473 V1_IPH_SQ_7.3.5_1_APP_A Pixel/1125 Core/UIWebView Device/Apple(iPhone X) NetType/WIFI QBWebViewType/1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Android 版 QQ浏览器：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Mozilla/5.0 (Linux; Android 4.4.2; PE-TL20 Build/HuaweiPE-TL20; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.2987.132 MQQBrowser/6.2 TBS/043807 Mobile Safari/537.36 V1_AND_SQ_7.3.2_762_YYB_D QQ/7.3.2.3350 NetType/WIFI WebP/0.3.0 Pixel/1080</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参考链接</strong>：</p><ul><li><p><a href="https://blog.csdn.net/taambernk520/article/details/80801574" target="_blank" rel="noopener noreferrer">微信、QQ在Android和iOS的UserAgent</a></p></li><li><p><a href="http://www.cnblogs.com/7z7chn/p/5370352.html" target="_blank" rel="noopener noreferrer">判断微信内置浏览器的UserAgent</a></p></li><li><p><a href="https://gist.github.com/wjp2013/fff34c063cf0cf227d65" target="_blank" rel="noopener noreferrer">微信内置浏览器UserAgent的判断</a></p></li></ul><h2 id="history-对象" tabindex="-1"><a class="header-anchor" href="#history-对象"><span>History 对象</span></a></h2><p>History对象：可以用来操作浏览器的向前或向后翻页。</p><h3 id="history对象的属性" tabindex="-1"><a class="header-anchor" href="#history对象的属性"><span>History对象的属性</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">history<span class="token punctuation">.</span>length</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：获取浏览器历史列表中的 url 数量。注意，只是统计当次的数量，如果浏览器关了，数量会重置为1。</p><h3 id="history对象的方法" tabindex="-1"><a class="header-anchor" href="#history对象的方法"><span>History对象的方法</span></a></h3><p><strong>方法1</strong>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">history.back();</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：用来回退到上一个页面，作用和浏览器的「回退按钮」一样。</p><p><strong>方法2</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">history<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：用来跳转下一个页面，作用和浏览器的「前进按钮」一样。</p><p><strong>方法3</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span> int n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 需要整数作为参数</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 代码举例：</span></span>
<span class="line">history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向前跳转一个页面，相当于 history.forward()</span></span>
<span class="line"></span>
<span class="line">history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 表示向前跳转两个页面</span></span>
<span class="line"></span>
<span class="line">history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 刷新当前页面</span></span>
<span class="line"></span>
<span class="line">history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向后跳转一个页面，相当于 history.back()</span></span>
<span class="line"></span>
<span class="line">history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向后跳转两个页面</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：向前/向后跳转 n 个页面。</p><p>备注：浏览器的前进按钮、后退按钮，在这个位置：</p><p><img src="http://img.smyhvae.com/20180201_2146.png" alt=""></p><h2 id="location-对象" tabindex="-1"><a class="header-anchor" href="#location-对象"><span>Location 对象</span></a></h2><p>Location 对象：封装了浏览器地址栏的 URL 信息。</p><p>下面介绍一些常见的属性和方法。</p><h3 id="location-对象的属性-location-href" tabindex="-1"><a class="header-anchor" href="#location-对象的属性-location-href"><span>Location 对象的属性：location.href</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">location.href</span>
<span class="line"></span>
<span class="line">location.href = &#39;https://xxx&#39;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：获取当前页面的 url 路径（或者设置 url 路径）；或者跳转到指定路径。</p><p>举例1：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取当前页面的url 路径</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>举例2：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;www.baidu.com&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 跳转到指定的页面链接。通俗理解就是：跳转到其他的页面</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>从上方的<strong>举例2</strong>中可以看出：如果直接将<code>location.href</code>属性修改为一个绝对路径（或相对路径），则页面会自动跳转到该路径，并生成相应的历史记录。</p><p><strong>window.location.href 是异步代码：</strong></p><p>需要特别注意的是：window.location.href的赋值，并不会中断Javascript的执行立即进行页面跳转。因为 LocationChange 行为在浏览器内核中是起定时器异步执行的。异步执行的好处是为了防止代码调用过深，导致栈溢出，另外也是为了防止递归进入加载逻辑，导致状态紊乱，保证导航请求是顺序执行的。</p><p>解决办法：在 location.href 的下一行，加上 return 即可。意思是，执行了 location.href 之后，就不要再继续往下执行了。</p><p>参考链接：<a href="https://juejin.cn/post/6844904040518647815" target="_blank" rel="noopener noreferrer">location.href的异步机制</a></p><h3 id="location-对象的方法" tabindex="-1"><a class="header-anchor" href="#location-对象的方法"><span>Location 对象的方法</span></a></h3><p><strong>方法1</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    location<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：用来跳转到其他的页面，作用和直接修改<code>location.href</code>一样。</p><p><strong>方法2</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释：用于重新加载当前页面，作用和刷新按钮一样。</p><p>代码举例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 重新加载当前页面。</span></span>
<span class="line">    location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 在方法的参数中传递一个true，则会强制清空缓存刷新页面。</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方法3</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"></span>
<span class="line">    location<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：使用一个新的页面替换当前页面，调用完毕也会跳转页面。但不会生成历史记录，不能使用「后退按钮」后退。</p><h2 id="我的公众号" tabindex="-1"><a class="header-anchor" href="#我的公众号"><span>我的公众号</span></a></h2>`,86)),s("p",null,[n[1]||(n[1]=a("想学习")),l(e,{color:"#0000ff"},{default:o(()=>n[0]||(n[0]=[s("strong",null,"更多技能",-1)])),_:1}),n[2]||(n[2]=a("？不妨关注我的微信公众号：")),n[3]||(n[3]=s("strong",null,"千古壹号",-1)),n[4]||(n[4]=a("（id：")),n[5]||(n[5]=s("code",null,"qianguyihao",-1)),n[6]||(n[6]=a("）。"))]),n[8]||(n[8]=s("p",null,"扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：",-1)),n[9]||(n[9]=s("p",null,[s("img",{src:"http://img.smyhvae.com/20190101.png",alt:""})],-1))])}const v=t(u,[["render",d],["__file","45-BOM简介和navigator.userAgent_History_Location.html.vue"]]),m=JSON.parse('{"path":"/Frontend/04-JavaScript%E5%9F%BA%E7%A1%80/45-BOM%E7%AE%80%E4%BB%8B%E5%92%8Cnavigator.userAgent_History_Location.html","title":"45-BOM简介和navigator.userAgent&History&Location","lang":"en-US","frontmatter":{"title":"45-BOM简介和navigator.userAgent&History&Location"},"headers":[{"level":2,"title":"常见概念","slug":"常见概念","link":"#常见概念","children":[{"level":3,"title":"JavaScript的组成","slug":"javascript的组成","link":"#javascript的组成","children":[]},{"level":3,"title":"常见的 BOM 对象","slug":"常见的-bom-对象","link":"#常见的-bom-对象","children":[]}]},{"level":2,"title":"Navigator 和 navigator.userAgent","slug":"navigator-和-navigator-useragent","link":"#navigator-和-navigator-useragent","children":[{"level":3,"title":"在电脑上模拟移动端浏览器","slug":"在电脑上模拟移动端浏览器","link":"#在电脑上模拟移动端浏览器","children":[]},{"level":3,"title":"不同浏览器的 userAgent","slug":"不同浏览器的-useragent","link":"#不同浏览器的-useragent","children":[]}]},{"level":2,"title":"History 对象","slug":"history-对象","link":"#history-对象","children":[{"level":3,"title":"History对象的属性","slug":"history对象的属性","link":"#history对象的属性","children":[]},{"level":3,"title":"History对象的方法","slug":"history对象的方法","link":"#history对象的方法","children":[]}]},{"level":2,"title":"Location 对象","slug":"location-对象","link":"#location-对象","children":[{"level":3,"title":"Location 对象的属性：location.href","slug":"location-对象的属性-location-href","link":"#location-对象的属性-location-href","children":[]},{"level":3,"title":"Location 对象的方法","slug":"location-对象的方法","link":"#location-对象的方法","children":[]}]},{"level":2,"title":"我的公众号","slug":"我的公众号","link":"#我的公众号","children":[]}],"git":{"updatedTime":1735791502000,"contributors":[{"name":"Jasmine Mo","username":"Jasmine Mo","email":"loxluthor@gmail.com","commits":2,"url":"https://github.com/Jasmine Mo"}]},"filePathRelative":"Frontend/04-JavaScript基础/45-BOM简介和navigator.userAgent&History&Location.md"}');export{v as comp,m as data};
